{"version":3,"sources":["assets/icon_costa.svg","assets/icon_greggs.svg","assets/icon_nero.svg","assets/icon_muffin.svg","assets/icon_paul.svg","assets/icon_pret.svg","assets/icon_starbuck.svg","assets/home.svg","assets/SectionGraphics.svg","assets/LogoTnC.png","assets/data/coffeeshop_index2.csv","components/Aside.js","components/map-section/ChartWrapper.js","contexts/BrandContext.js","components/map-section/brands/BrandLogo.js","components/map-section/brands/BrandLogos.js","contexts/MapContext.js","components/map-section/MapSection.js","components/map-section/brands/BrandLogoStatic.js","contexts/PlaceContext.js","components/dropdown/Dropdown.js","App.js","index.js"],"names":["module","exports","Aside","props","className","class","children","ChartWrapper","svgRef","useRef","getColour","brand","useEffect","console","log","svg","select","current","HEIGHT","clientHeight","WIDTH","clientWidth","projection","geoAlbers","center","rotate","parallels","scale","translate","path","geoPath","chartData","csvValues","Array","from","Object","values","csvData","maxValue","Math","max","map","d","colourScale","scaleLinear","domain","range","colourScaleAlt","selectAll","data","join","enter","append","attr","update","style","transition","duration","on","exit","remove","ref","BrandContext","createContext","BrandLogo","currentBrandLogo","IconCosta","IconGreggs","IconNero","IconMuffin","IconPaul","IconPret","IconStarbuck","_class","Consumer","context","src","alt","onClick","e","event","document","querySelectorAll","forEach","el","classList","target","add","setBrand","brands","BrandLogos","key","MapContext","MapSection","mapContextData","brandContextData","IconHome","PlaceContext","DropdownItem","updateLocation","setLocation","location","data-value","label","Dropdown","selectWrapper","useState","open","setOpen","placeContextData","tabIndex","sort","a","b","localeCompare","uid","setPlace","App","SectionGraphics","brandLabels","costa","nero","greggs","muffin","pret","starbucks","paul","setChartData","coffeeshopCsvObj","setCoffeeshopCsvObj","place","features","topojson","map_data","coffeeshopCsv","csv","coffeeshopData","Promise","all","then","csvObj","housePrice","population","caffeNero","esquires","muffinBreak","pretAManger","loc_id","backgroundImage","backgroundSize","backgroundRepeat","marginTop","LogoGraphics","Provider","value","BrandLogoStatic","replace","keys","slice","width","display","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a7f7d9b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icon_costa.282c090d.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_greggs.26e8e6f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_nero.ba474c07.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_muffin.296a0312.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_paul.f73e20f6.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_pret.b2610c89.svg\";","module.exports = __webpack_public_path__ + \"static/media/icon_starbuck.70f59637.svg\";","module.exports = __webpack_public_path__ + \"static/media/home.373154a0.svg\";","module.exports = __webpack_public_path__ + \"static/media/SectionGraphics.9dcaa121.svg\";","module.exports = __webpack_public_path__ + \"static/media/LogoTnC.cd76c452.png\";","module.exports = __webpack_public_path__ + \"static/media/coffeeshop_index2.59a65785.csv\";","import React from 'react'\r\n\r\nfunction Aside(props) {\r\n  return (\r\n    <aside className={props.class}>\r\n      {props.children}\r\n    </aside>\r\n  )\r\n}\r\n\r\nexport default Aside\r\n","import React, { useRef, useEffect } from 'react';\r\nimport { select, geoPath, geoAlbers, scaleLinear } from 'd3'\r\n\r\nconst ChartWrapper = (props) => {\r\n\tconst svgRef = useRef();\r\n\t// const [chartData, setChartData] = useState()\r\n\t// const chartArea = useRef(null)\r\n\t// const [chart, setChart] = useState(null)\r\n\tfunction getColour(brand) {\r\n\t\tswitch (brand) {\r\n\t\t\tcase ('costa'):\r\n\t\t\t\treturn \"#902833\"\r\n\t\t\tcase ('greggs'):\r\n\t\t\t\treturn \"#007BBA\"\r\n\t\t\tcase ('nero'):\r\n\t\t\t\treturn \"#668DD6\"\r\n\t\t\tcase ('muffin'):\r\n\t\t\t\treturn \"#491225\"\r\n\t\t\tcase ('pret'):\r\n\t\t\t\treturn \"#B20D3B\"\r\n\t\t\tcase ('paul'):\r\n\t\t\t\treturn \"#000000\"\r\n\t\t\tcase ('starbucks'):\r\n\t\t\t\treturn \"#006241\"\r\n\t\t\tdefault:\r\n\t\t\t\treturn null;\r\n\t\t}\r\n\t}\r\n\tuseEffect(() => {\r\n\t\tconsole.log(props)\r\n\t\tconst svg = select(svgRef.current);\r\n\t\tlet HEIGHT = svgRef.current.clientHeight;\r\n\t\tlet WIDTH = svgRef.current.clientWidth;\r\n\r\n\r\n\t\tlet projection = geoAlbers()\r\n\t\t\t.center([0, 55.4])\r\n\t\t\t.rotate([4.4, 0])\r\n\t\t\t.parallels([50, 60])\r\n\t\t\t.scale(3200)\r\n\t\t\t.translate([WIDTH / 2, HEIGHT / 2])\r\n\r\n\t\tvar path = geoPath().projection(projection);\r\n\t\tif (!props.chartData) return\r\n\r\n\t\tconst csvValues = Array.from(Object.values(props.csvData));\r\n\t\tconst maxValue = Math.max(...Array.from(csvValues.map(d => +d['per100k'][props.brand]))) * 100000\r\n\t\tconsole.log(maxValue)\r\n\r\n\t\tlet colourScale = scaleLinear().domain([0, maxValue]).range([\"#fff\", getColour(props.brand)])\r\n\t\tlet colourScaleAlt = scaleLinear().domain([0, maxValue]).range([getColour(props.brand), \"#fff\"])\r\n\t\tconsole.log(colourScale(0.2))\r\n\t\tvar def = svg.selectAll('defs').data([null]).join(enter => enter.append('defs'))\r\n\t\tvar linearGradient = def.selectAll(\"linearGradient\").data([null])\r\n\t\t\t.join(enter => enter.append('linearGradient')\r\n\t\t\t\t.attr('gradientTransform', 'rotate(90)')\r\n\t\t\t\t.attr('id', 'linear-gradient'),\r\n\t\t\t\tupdate => update\r\n\t\t\t\t\t.attr('id', 'linear-gradient')\r\n\t\t\t)\r\n\r\n\t\tlinearGradient.selectAll(\"stop\")\r\n\t\t\t.data([0, maxValue])\r\n\t\t\t.join(enter => {\r\n\t\t\t\tenter.append(\"stop\")\r\n\t\t\t\t\t.attr(\"offset\", d => `${d}%`)\r\n\t\t\t\t\t.attr(\"stop-color\", d => colourScaleAlt(d));\r\n\t\t\t},\r\n\t\t\t\tupdate => {\r\n\t\t\t\t\tupdate\r\n\t\t\t\t\t\t.attr(\"offset\", d => `${d}%`)\r\n\t\t\t\t\t\t.attr(\"stop-color\", d => colourScaleAlt(d));\r\n\t\t\t\t}\r\n\t\t\t)\r\n\r\n\t\tsvg.selectAll('rect').data([null])\r\n\t\t\t.join(enter => {\r\n\t\t\t\tenter.append('rect')\r\n\t\t\t\t\t.attr(\"id\", \"TnC-chart-legend\")\r\n\t\t\t\t\t.attr(\"height\", \"33em\")\r\n\t\t\t\t\t.attr(\"width\", \"2em\")\r\n\t\t\t\t\t.attr('rx', \"1em\")\r\n\t\t\t\t\t.style(\"fill\", \"url(#linear-gradient)\")\r\n\t\t\t\t\t.attr(\"stroke\", \"grey\")\r\n\t\t\t\t\t.attr(\"stroke-size\", \"2\")\r\n\t\t\t\t\t.attr(\"transform\", \"translate(40, 20)\")\r\n\t\t\t},\r\n\t\t\t\tupdate => update\r\n\t\t\t\t\t.transition().duration(500)\r\n\t\t\t\t\t.style(\"fill\", \"url(#linear-gradient)\")\r\n\t\t\t)\r\n\r\n\t\tsvg.selectAll('path')\r\n\t\t\t.data(props.chartData)\r\n\t\t\t.join(\r\n\t\t\t\tenter => {\r\n\t\t\t\t\tenter.append('path')\r\n\t\t\t\t\t\t.attr('d', path)\r\n\t\t\t\t\t\t.attr('fill', (d) => {\r\n\t\t\t\t\t\t\tif (d && d['per100k']) return colourScale(+d['per100k'][props.brand] * 100000)\r\n\t\t\t\t\t\t\treturn \"#fff\"\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.attr(\"stroke\", '#ccc')\r\n\t\t\t\t\t\t.attr(\"stroke-width\", '0.05em')\r\n\t\t\t\t\t\t.on('click', d => { console.log(d) })\r\n\t\t\t\t},\r\n\t\t\t\tupdate => {\r\n\t\t\t\t\tupdate.attr('class', 'updated')\r\n\t\t\t\t\t\t.transition().duration(500)\r\n\t\t\t\t\t\t.attr('fill', (d) => {\r\n\t\t\t\t\t\t\tif (d && d['per100k']) return colourScale(+d['per100k'][props.brand] * 100000)\r\n\t\t\t\t\t\t\treturn \"#fff\"\r\n\t\t\t\t\t\t})\r\n\t\t\t\t},\r\n\t\t\t\texit => exit.remove()\r\n\t\t\t)\r\n\t})\r\n\r\n\treturn (\r\n\t\t<svg ref={svgRef} className=\"TnC-map__svg\">\r\n\r\n\t\t</svg>\r\n\t)\r\n}\r\n\r\nexport default ChartWrapper","import{createContext} from 'react'\r\nconst BrandContext = createContext()\r\nexport default BrandContext\r\n","import React from 'react';\r\nimport IconCosta from '../../../assets/icon_costa.svg';\r\nimport IconGreggs from '../../../assets/icon_greggs.svg';\r\nimport IconNero from '../../../assets/icon_nero.svg';\r\nimport IconMuffin from '../../../assets/icon_muffin.svg';\r\nimport IconPaul from '../../../assets/icon_paul.svg';\r\nimport IconPret from '../../../assets/icon_pret.svg';\r\nimport IconStarbuck from '../../../assets/icon_starbuck.svg';\r\nimport BrandContext from '../../../contexts/BrandContext';\r\n\r\nconst BrandLogo = (props) => {\r\n  let currentBrandLogo = null;\r\n  const { brand } = props;\r\n  switch (props.brand) {\r\n    case ('costa'):\r\n      currentBrandLogo = IconCosta\r\n      break;\r\n    case ('greggs'):\r\n      currentBrandLogo = IconGreggs\r\n      break;\r\n    case ('nero'):\r\n      currentBrandLogo = IconNero\r\n      break;\r\n    case ('muffin'):\r\n      currentBrandLogo = IconMuffin\r\n      break;\r\n    case ('paul'):\r\n      currentBrandLogo = IconPaul\r\n      break;\r\n    case ('pret'):\r\n      currentBrandLogo = IconPret\r\n      break;\r\n    case ('starbucks'):\r\n      currentBrandLogo = IconStarbuck\r\n      break;\r\n    default:\r\n      currentBrandLogo = null\r\n      break;\r\n  }\r\n  function styleActiveBrand(e) {\r\n    document.querySelectorAll('.TnC-map__brand-logo').forEach(el => {\r\n      el.classList.remove('active-brand')\r\n    })\r\n    e.target.classList.add('active-brand')\r\n  }\r\n  let _class = props.brand === 'costa' ? \"TnC-map__brand-logo active-brand\" : \"TnC-map__brand-logo\";\r\n  return (\r\n    <BrandContext.Consumer>{\r\n      context => {\r\n        return <img className={_class}\r\n          src={currentBrandLogo}\r\n          alt={`${currentBrandLogo} icon`}\r\n          onClick={\r\n            () => {\r\n              // eslint-disable-next-line no-restricted-globals\r\n              styleActiveBrand(event);\r\n              console.log(context)\r\n              context.setBrand(brand);\r\n            }\r\n          } />\r\n      }\r\n    }\r\n    </BrandContext.Consumer>\r\n  )\r\n}\r\nexport default BrandLogo\r\n","import React from 'react'\r\nimport BrandLogo from './BrandLogo';\r\n\r\nconst brands = ['costa', 'greggs', 'nero', 'muffin', 'paul', 'pret', 'starbucks']\r\n\r\nfunction BrandLogos() {\r\n  return (\r\n    brands.map(brand => <BrandLogo key={brand} brand={brand}></BrandLogo>)\r\n  )\r\n}\r\n\r\nexport default BrandLogos\r\n","import{createContext} from 'react'\r\nconst MapContext = createContext()\r\nexport default MapContext\r\n","import React, { useEffect } from 'react'\r\nimport ChartWrapper from './ChartWrapper'\r\nimport BrandLogos from './brands/BrandLogos'\r\nimport MapContext from '../../contexts/MapContext';\r\nimport BrandContext from '../../contexts/BrandContext';\r\n// import * as topojson from 'topojson-client'\r\n\r\nfunction MapSection() {\r\n\r\n  useEffect(() => {\r\n  }, [])\r\n  return (\r\n    <main className=\"TnC-map\">\r\n      <div className=\"TnC-map__wrapper\">\r\n        <div className=\"TnC-map__map\">\r\n          <h2 className=\"TnC-map__heading\">The density of COFFEE SHOPS per city, <br></br>borough and district across the UK</h2>\r\n          <h3 className=\"TnC-map__subheading\">\r\n            (The deeper the colour = the higher the per capita density of selected coffee shop brand)</h3>\r\n          <MapContext.Consumer>\r\n            {mapContextData =>\r\n              <BrandContext.Consumer>\r\n                {brandContextData =>\r\n                  <ChartWrapper\r\n                    chartData={mapContextData && mapContextData.chartData && mapContextData.chartData}\r\n                    csvData={mapContextData && mapContextData.csvData}\r\n                    brand={brandContextData.brand}\r\n                    setBrand={brandContextData.setBrand}\r\n                  >\r\n                  </ChartWrapper>\r\n                }\r\n              </BrandContext.Consumer>\r\n            }\r\n          </MapContext.Consumer>\r\n          <h4 className=\"TnC-aside__selected-place--attr\">Select a Coffee Shop:</h4>\r\n        </div>\r\n        <div className=\"TnC-map__brands\">\r\n          <BrandLogos></BrandLogos>\r\n        </div>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default MapSection\r\n","import React from 'react';\r\nimport IconHome from '../../../assets/home.svg';\r\nimport IconCosta from '../../../assets/icon_costa.svg';\r\nimport IconGreggs from '../../../assets/icon_greggs.svg';\r\nimport IconNero from '../../../assets/icon_nero.svg';\r\nimport IconMuffin from '../../../assets/icon_muffin.svg';\r\nimport IconPaul from '../../../assets/icon_paul.svg';\r\nimport IconPret from '../../../assets/icon_pret.svg';\r\nimport IconStarbuck from '../../../assets/icon_starbuck.svg';\r\nimport BrandContext from '../../../contexts/BrandContext';\r\n\r\nconst BrandLogo = (props) => {\r\n  let currentBrandLogo = null;\r\n  switch (props.brand) {\r\n    case ('costa'):\r\n      currentBrandLogo = IconCosta\r\n      break;\r\n    case ('greggs'):\r\n      currentBrandLogo = IconGreggs\r\n      break;\r\n    case ('nero'):\r\n      currentBrandLogo = IconNero\r\n      break;\r\n    case ('muffin'):\r\n      currentBrandLogo = IconMuffin\r\n      break;\r\n    case ('paul'):\r\n      currentBrandLogo = IconPaul\r\n      break;\r\n    case ('pret'):\r\n      currentBrandLogo = IconPret\r\n      break;\r\n    case ('starbucks'):\r\n      currentBrandLogo = IconStarbuck\r\n      break;\r\n    case ('home'):\r\n      currentBrandLogo = IconHome\r\n      break;\r\n    default:\r\n      currentBrandLogo = null\r\n      break;\r\n  }\r\n\r\n  return (\r\n    <BrandContext.Consumer>{\r\n      context => {\r\n        return <img className=\"TnC-map__brand-logo--static\"\r\n          src={currentBrandLogo}\r\n          alt={`${currentBrandLogo} icon`}\r\n        />\r\n      }\r\n    }\r\n    </BrandContext.Consumer>\r\n  )\r\n}\r\nexport default BrandLogo\r\n","import{createContext} from 'react'\r\nconst PlaceContext = createContext()\r\nexport default PlaceContext\r\n","import React, { useRef, useState } from 'react'\r\nimport \"./dropdown.scss\"\r\nimport MapContext from '../../contexts/MapContext';\r\nimport PlaceContext from '../../contexts/PlaceContext';\r\n\r\nfunction DropdownItem(props) {\r\n  function updateLocation() {\r\n    props.setLocation && props.setLocation(props.location);\r\n  }\r\n  return (\r\n    <MapContext.Consumer>\r\n      {\r\n        mapContextData =>\r\n          <span\r\n            className=\"custom-option\"\r\n            data-value=\"tesla\"\r\n            onClick={updateLocation}\r\n          >{props.label} </span>\r\n      }\r\n    </MapContext.Consumer>\r\n  )\r\n}\r\n\r\nfunction Dropdown() {\r\n  const selectWrapper = useRef()\r\n  const [location, setLocation] = useState(\"Select location\")\r\n  const [open, setOpen] = useState(false)\r\n\r\n  return (\r\n    <div ref={selectWrapper} className=\"custom-select-wrapper\" onClick={\r\n      () => {\r\n        setOpen(!open)\r\n      }\r\n    }>\r\n      <MapContext.Consumer>\r\n        {mapContextData =>\r\n          <PlaceContext.Consumer>\r\n            {placeContextData =>\r\n              <div className=\"custom-select\">\r\n                <div tabIndex=\"0\" className=\"custom-select__trigger\">\r\n                  <span>{mapContextData && mapContextData.csvData && placeContextData && placeContextData[\"place\"] && mapContextData.csvData[placeContextData[\"place\"]]['location'] || \"Select a location\"}</span>\r\n                  <div className=\"arrow\"></div>\r\n                  {mapContextData.csvData && console.log(Object.values(mapContextData.csvData))}\r\n                </div>\r\n                {open ?\r\n                  < div className=\"custom-options\">\r\n                    {\r\n                      mapContextData.csvData && (Array.from(Object.values(mapContextData.csvData))\r\n                        .sort((a, b) => a[\"location\"].localeCompare(b[\"location\"]))).map(d => {\r\n                          return <DropdownItem key={d.uid} label={d.location} location={d.uid} setLocation={placeContextData.setPlace}></DropdownItem>\r\n                        })}\r\n                  </div>\r\n                  : \"\"\r\n                }\r\n              </div>\r\n            }\r\n          </PlaceContext.Consumer>\r\n        }\r\n      </MapContext.Consumer>\r\n    </div >\r\n  )\r\n}\r\nexport default Dropdown\r\n","import React, { useState, useEffect } from 'react';\nimport { csv } from 'd3';\nimport './App.scss';\nimport SectionGraphics from './assets/SectionGraphics.svg';\nimport LogoGraphics from './assets/LogoTnC.png';\nimport Aside from './components/Aside';\nimport MapSection from './components/map-section/MapSection';\nimport Home from './assets/home.svg'\nimport BrandLogoStatic from './components/map-section/brands/BrandLogoStatic';\nimport Dropdown from './components/dropdown/Dropdown';\nimport * as topojson from 'topojson-client'\nimport coffeeshopData from './assets/data/coffeeshop_index2.csv';\nimport map_data from './assets/data/Local_Authority_Districts__2016.topo.json';\n\nimport MapContext from './contexts/MapContext';\nimport BrandContext from './contexts/BrandContext'\nimport PlaceContext from './contexts/PlaceContext'\n\n\nfunction App() {\n  console.log(SectionGraphics)\n  const brandLabels = {\n    costa: \"Costa\",\n    nero: \"Cafe Nero\",\n    greggs: \"Greggs\",\n    muffin: \"Muffin Break\",\n    pret: \"Pret A Manger\",\n    starbucks: \"Starbucks\",\n    paul: \"Paul\",\n\n  }\n\n  const [chartData, setChartData] = useState(null)\n  const [coffeeshopCsvObj, setCoffeeshopCsvObj] = useState(null)\n  const [brand, setBrand] = useState(\"costa\")\n  const [place, setPlace] = useState(\"\")\n  // const [selectedLocation, setSelectedLocation] = useState(null)\n  // const [state, setState] = useState({\n  //   brand: 'costa',\n  //   place: null,\n  //   setBrand: (newbrand) => setState({ ...state, brand: newbrand }),\n  //   setPlace: (newPlace) => setState({ ...state, place: newPlace })\n  // });\n\n\n  useEffect(() => {\n    const features = topojson.feature(map_data, \"Local_Authority_Districts__D\");\n    const coffeeshopCsv = csv(coffeeshopData);\n    Promise.all([features, coffeeshopCsv]).then(values => {\n\n      const csvObj = {}\n      values[1].forEach(d => {\n        csvObj[d[\"Location Code\"]] = {\n          housePrice: d[\"House Prices\"],\n          location: d[\"Location\"],\n          uid: d[\"Location Code\"],\n          population: d[\"Population\"],\n          // const brands = ['costa', 'greggs', 'nero', 'muffin', 'paul', 'starbucks']\n          \"per100k\": {\n            nero: +d[\"A_CaffeNero\"],\n            costa: +d[\"A_Costa\"],\n            paul: +d[\"A_Esquires\"],\n            greggs: +d[\"A_Greggs\"],\n            muffin: +d[\"A_MuffinBreak\"],\n            pret: +d[\"A_PretAManger\"],\n            starbucks: +d[\"A_Starbucks\"],\n          },\n          \"count\": {\n            caffeNero: +d[\"C_CaffeNero\"],\n            costa: +d[\"C_Costa\"],\n            esquires: +d[\"C_Esquires\"],\n            greggs: +d[\"C_Greggs\"],\n            muffinBreak: +d[\"C_MuffinBreak\"],\n            pretAManger: +d[\"C_PretAManger\"],\n            starbucks: +d[\"C_Starbucks\"],\n          }\n        }\n      })\n      setCoffeeshopCsvObj(csvObj)\n      setChartData(values[0].features.map(d => {\n        const loc_id = d[\"properties\"][\"lad16cd\"]\n        return d = { ...d, ...csvObj[loc_id] }\n      }))\n    })\n  }, [])\n\n\n  return (\n    <div className=\"TnC\">\n      <Aside class=\"TnC__aside TnC__aside--left\">\n        <div className=\"TnC__HeadingContainer\" style={{\n          backgroundImage: `url(${SectionGraphics})`,\n          backgroundSize: 'auto 30em',\n          backgroundRepeat: 'no-repeat'\n        }}>\n          <h1 className=\"TnC__heading\">Coffee Shops Index</h1>\n        </div>\n        <div className=\"u__space-around--col\">\n          <p className=\"TnC__paragraph--left1\">\n            Does the value of your home determine the brand of coffee shops you'll have convenient access to?\n        </p>\n          <p className=\"TnC__paragraph--left2\">\n            Our Coffee Shops Index uncovers correlations between the location and density of 7 of the most popular coffee shops in the UK and average house prices for 392 cities, boroughs and districts.\n        </p>\n          <div className=\"TnC__LogoGraphics\" style={{ marginTop: \"5em\" }}>\n            <img className=\"TnC__LogoGraphics--left\" src={LogoGraphics} alt=\"Section Graphics\" />\n          </div>\n        </div>\n      </Aside>\n      <BrandContext.Provider value={{ brand: brand, setBrand: setBrand }}>\n        <MapContext.Provider value={{ chartData: chartData, csvData: coffeeshopCsvObj, brand: brand, place: place, setPlace: setPlace }}>\n          <MapSection />\n          <PlaceContext.Provider value={{ place: place, setPlace: setPlace }}>\n            <Aside class=\"TnC-aside TnC__aside--right\">\n              <div className=\"TnC-aside TnC-aside__section-right TnC-aside__section-right--1\" >\n                <Dropdown></Dropdown>\n              </div>\n              <div className=\"TnC-aside TnC-aside__section-right TnC-aside__section-right--2\" >\n                <h3 className=\"TnC-aside__selected-place--name\">{coffeeshopCsvObj && coffeeshopCsvObj[place] ? coffeeshopCsvObj[place].location : \"\"}</h3>\n                <BrandLogoStatic brand=\"home\"></BrandLogoStatic>\n                <h4 className=\"TnC-aside__selected-place--attr\">Average House Price</h4>\n                <div className=\"u__container u__container--white\">\n                  {coffeeshopCsvObj && coffeeshopCsvObj[place] ? coffeeshopCsvObj[place].housePrice.replace(\".00\", \"\") : \"\"}\n                </div>\n\n                <BrandLogoStatic brand={brand}></BrandLogoStatic>\n                <h4 className=\"TnC-aside__selected-place--attr\">Number of {brand ? brandLabels[brand] : \"coffe shops\"} per 100,000 people</h4>\n                <div className=\"u__container u__container--white\">\n                  {coffeeshopCsvObj && coffeeshopCsvObj[place] ? coffeeshopCsvObj[place][\"per100k\"][brand] : \"\"}\n                </div>\n\n                <h4 className=\"TnC-aside__selected-place--attr\">Most poular Coffee Shops in the area</h4>\n\n                <div className=\"u__container u__container--tall\">\n                  {coffeeshopCsvObj && coffeeshopCsvObj[place] ? Array.from(Object.keys(coffeeshopCsvObj[place][\"per100k\"]).map(d=>{\n                    return {brand: d, value: coffeeshopCsvObj[place][\"per100k\"][d]}\n                  })).sort((a, b)=>+b.value - +a.value).slice(0,3).map(d => {\n                  return <li key={`1${d.brand}`} style={{width:'100%', display:'block'}}><BrandLogoStatic  brand={d.brand}></BrandLogoStatic><span>{brandLabels[d.brand]} {d.value}</span></li>\n                  }) : \"\"}\n                </div>\n              </div>\n\n            </Aside>\n          </PlaceContext.Provider>\n        </MapContext.Provider>\n      </BrandContext.Provider>\n    </div >\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}